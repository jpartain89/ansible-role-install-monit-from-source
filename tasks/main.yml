---
# monit_from_source/tasks/main.yml

- include_vars: macOS.yml
  when: ansible_os_family == "Darwin"

- include_vars: debian.yml
  when: ansible_os_family == "Debian"

- name: Get Current Monit Version
  shell: "monit --version | awk 'NR==1 {print $5}'"
  register: _current_monit_version
  ignore_errors: "yes"
  changed_when: false

- name: Debian | Install Required Programs to Build Monit
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: "{{ cache_valid_time_var }}"
  with_items:
    - "{{ monit_apt_apps }}"
  become: true
  when: ansible_os_family == "Debian"

- name: macOS | Install Required Programs to Build Monit
  homebrew:
    name: "{{ item }}"
    state: latest
  with_items:
    - "{{ monit_brew_appsÂ }}"
  when: ansible_os_family == "Darwin"
  become: false

- name: Run monit_brew_openssl.yml for macOS
  include_tasks: monit_brew_openssl.yml
  when:
    - ansible_os_family == "Darwin"
    - monit_macos_brew_openssl == "yes"

- name: Create Any Missing Directories for Monit's Git Repo
  file:
    path: "{{ monit_git_repo_dest }}"
    state: directory
    mode: 0775
  become:

- name: Clone/Update Monit's Git Repo
  git:
    repo: "{{ monit_git_repo_http }}"
    dest: "{{ monit_git_repo_dest }}"
    update: yes
    force: yes
  register: monit_git_update
  become_user: "{{ ansible_user_id }}"

- name: Set Current Version from Git Repo
  shell: awk '$1=="Version"{print $2;exit;}' ./CHANGES
  args:
    chdir: "{{ monit_git_repo_dest }}"
  register: _git_monit_version
  changed_when: false

- name: Build Monit
  include_tasks: monit_build.yml
  when: _current_monit_version.stdout_lines != _git_monit_version.stdout_lines
  register: _monit_build

- debug: var=_monit_build

- include_tasks: monit_autostart.yml
